go.property("With_Player", 1)
go.property("StartRotAngle", 180)
go.property("GuiUrl", "/gui#maingame")
go.property("Points", 0) -- TODO refactor and delete

function init(self)
	msg.post("#", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("/cam_hdl#camera", "acquire_camera_focus")

	self.StartPos = go.get_position()
	self.StartRot = go.get_rotation()
	self.StartBulletSpeed = 1000
	self.StartMoveingSpeed = 300
	self.StartRotationSpeed = 40
	self.StartArmor = 1
	self.StartMaxArmor = 2
	self.StartMaxBullets = 3
	self.StartMaxBulletBounce = 1
	self.StartBulletLifeTime = 4

	self.MoveingSpeed    = self.StartMoveingSpeed
	self.RotationSpeed   = self.StartRotationSpeed
	self.BulletSpeed     = self.StartBulletSpeed
	self.MaxBullets      = self.StartMaxBullets
	self.MaxBulletBounce = self.StartMaxBulletBounce
	self.BulletLifeTime  = self.StartBulletLifeTime
	self.MaxArmor        = self.StartMaxArmor
	

	self.bullets2shoot = self.MaxBullets
	self.Armor = self.StartArmor
	self.Ammo  = self.MaxBullets 
	
	self.ShootCooldown = 1
	self.ShootTime = 0
	
	self.rot = math.rad(self.StartRotAngle)
	self.pos = vmath.vector3()

	self.Points = 0
	self.Forward = true
	
	self.bullets = {}

	if self.With_Player == 1 then     msg.post("/gui#maingame", "set_armor_player1",{value = self.Armor})
	elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_armor_player2",{value = self.Armor})
	end

	if self.With_Player == 1 then msg.post("/gui#maingame", "set_ammo_player1" , {value = self.Ammo})
	elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_ammo_player2" , {value = self.Ammo})
	end

	math.randomseed(socket.gettime()) 
end

function fixed_update(self, dt)
	local rot = go.get(".", "euler.z") + self.rot * dt
	go.set(".", "euler.z", rot)
	self.rot = 0

	go.set_position(go.get_position() + self.pos * dt)
	self.pos = vmath.vector3()

	self.ShootTime = self.ShootTime + dt
	self.Forward = true
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("wall") then go.set_position(go.get_position() + message.normal * message.distance) end
		if message.other_group == hash("powerup") then msg.post(message.other_id, "response") end
	end
	
	if message_id == hash("restart") then restart(self) end
	if message_id == hash("TakeHit") then TakeHit(self) end
	
	CheckPowerUps(self, message_id, message.value)
end

function on_input(self, action_id, action)
	if action_id == hash("forward") and self.With_Player == 1 or action_id == hash("forward2") and self.With_Player == 2 then
		self.pos = self.pos + vmath.rotate(go.get_rotation(), vmath.vector3(0,self.MoveingSpeed,0))
		self.Forward = true
		
	elseif action_id == hash("backward") and self.With_Player == 1 or action_id == hash("backward2") and self.With_Player == 2 then
		self.pos = self.pos - vmath.rotate(go.get_rotation(), vmath.vector3(0,self.MoveingSpeed,0))
		self.Forward = false
		
	elseif action_id == hash("turnleft") and self.With_Player == 1 or action_id == hash("turnleft2") and self.With_Player == 2 then
		if self.Forward then self.rot = self.rot + self.RotationSpeed
		else self.rot = self.rot - self.RotationSpeed end
		
	elseif action_id == hash("turnright") and self.With_Player == 1 or action_id == hash("turnright2") and self.With_Player == 2 then
		if self.Forward then self.rot = self.rot - self.RotationSpeed
		else self.rot = self.rot + self.RotationSpeed end
		
	elseif action_id == hash("shoot") and self.With_Player == 1 or action_id == hash("shoot2") and self.With_Player == 2 then
		if self.ShootTime >= self.ShootCooldown then
			SpawnBullet(self)
			self.ShootTime = 0
		end
	end
end

function SpawnBullet(self)
	if self.Ammo <= 0 then return end
	self.Ammo = self.Ammo - 1
	
	local pos = go.get_position()
	local path = ""

	if self.With_Player == 1 then
		path = "Player#bulletfactory"
		msg.post("/gui#maingame", "set_ammo_player1" , {value = self.Ammo})
	elseif self.With_Player == 2 then
		path = "Player2#bulletfactory"
		msg.post("/gui#maingame", "set_ammo_player2" , {value = self.Ammo})
	end

	table.insert(self.bullets, factory.create(path, pos, nil, {
		direction = vmath.rotate(go.get_rotation(),vmath.vector3(0,1,0)),
		witch_player = self.With_Player,
		speed = self.BulletSpeed,
		lifetime = self.BulletLifeTime,
		maxbounce = self.MaxBulletBounce
	}))
end

function EndRound(self)
	self.Points = self.Points + 1

	self.StartMoveingSpeed    = self.MoveingSpeed
	self.StartRotationSpeed   = self.RotationSpeed
	self.StartBulletSpeed     = self.BulletSpeed
	self.StartMaxBullets      = self.MaxBullets
	self.StartMaxBulletBounce = self.MaxBulletBounce
	self.StartBulletLifeTime  = self.BulletLifeTime
	self.StartMaxArmor        = self.MaxArmor

	if self.With_Player == 1 then	msg.post("/gui#maingame", "set_points_player2", {value = self.Points})	end
	if self.With_Player == 2 then	msg.post("/gui#maingame", "set_points_player1", {value = self.Points})	end

	msg.post("/Player2", "restart")
	msg.post("/Player", "restart")
	msg.post("/MapGen", "restart")
end

function restart(self)
	self.MoveingSpeed    = self.StartMoveingSpeed
	self.RotationSpeed   = self.StartRotationSpeed
	self.BulletSpeed     = self.StartBulletSpeed
	self.MaxBullets      = self.StartMaxBullets
	self.MaxBulletBounce = self.StartMaxBulletBounce
	self.BulletLifeTime  = self.StartBulletLifeTime
	self.MaxArmor        = self.StartMaxArmor
	self.Armor           = self.StartArmor
	self.Ammo            = self.MaxBullets

	if self.With_Player == 1 then     msg.post("/gui#maingame", "set_armor_player1",{value = self.Armor})
	elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_armor_player2",{value = self.Armor})
	end

	if self.With_Player == 1 then msg.post("/gui#maingame", "set_ammo_player1" , {value = self.Ammo})
	elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_ammo_player2" , {value = self.Ammo})
	end
	
	go.set_position(self.StartPos)
	go.set_rotation(self.StartRot)
	for _, child_id in ipairs(self.bullets) do	go.delete(child_id)	end
	self.bullets = {}
end

function TakeHit(self)
	self.Armor = self.Armor - 1
	if self.Armor < 0 then EndRound(self) end
	
	if self.With_Player == 1 then     msg.post("/gui#maingame", "set_armor_player1",{value = self.Armor})
	elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_armor_player2",{value = self.Armor}) 
	end
end

function CheckPowerUps(self, message_id, value)
	if message_id == hash("bulletspeed")      then self.BulletSpeed     = self.BulletSpeed + value
	elseif message_id == hash("tankspeed")    then self.MoveingSpeed    = self.MoveingSpeed + value
	elseif message_id == hash("tanksrotpeed") then self.RotationSpeed   = self.RotationSpeed + value 
	elseif message_id == hash("maxarmor")     then self.MaxArmor        = self.MaxArmor + value
	elseif message_id == hash("maxbounce")    then self.MaxBulletBounce = self.MaxBulletBounce + value
	elseif message_id == hash("lifetime")     then self.BulletLifeTime  = self.BulletLifeTime + value
	elseif message_id == hash("maxbullets")   then self.MaxBullets      = self.MaxBullets + value

	elseif message_id == hash("armor") then
		self.Armor = self.Armor + value
		if self.Armor > self.MaxArmor then self.Armor = self.MaxArmor end
		if self.With_Player == 1 then     msg.post("/gui#maingame", "set_armor_player1",{value = self.Armor})
	    elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_armor_player2",{value = self.Armor}) 
        end

	elseif message_id == hash("ammo") then
		self.Ammo = self.Ammo + value
		if self.Ammo > self.MaxBullets then self.Ammo = self.MaxBullets end
		if self.With_Player == 1 then msg.post("/gui#maingame", "set_ammo_player1" , {value = self.Ammo})
		elseif self.With_Player == 2 then msg.post("/gui#maingame", "set_ammo_player2" , {value = self.Ammo})
		end
	end
end